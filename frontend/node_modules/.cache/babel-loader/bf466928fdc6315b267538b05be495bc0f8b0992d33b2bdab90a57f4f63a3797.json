{"ast":null,"code":"import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n//register action\nexport const registerUserAction = createAsyncThunk(\"users/register\", async (user, _ref) => {\n  let {\n    rejectWithValue,\n    getState,\n    dispatch\n  } = _ref;\n  try {\n    //http call\n    const config = {\n      headers: {\n        \"Content-Type\": \"application/json\"\n      }\n    };\n    const {\n      data\n    } = await axios.post(\"http://localhost:5000/api/users/register\", user, config);\n    return data;\n  } catch (error) {\n    var _error$response;\n    if (!(error !== null && error !== void 0 && error.response)) {\n      throw error;\n    }\n    return rejectWithValue(error === null || error === void 0 ? void 0 : (_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data);\n  }\n});\n\n//slices\n\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {\n    userAuth: \"Emma\"\n  },\n  extraReducers: builder => {\n    //register\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.registered = action === null || action === void 0 ? void 0 : action.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      var _action$payload, _action$error;\n      state.loading = false;\n      state.appErr = action === null || action === void 0 ? void 0 : (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.message;\n      state.serverErr = action === null || action === void 0 ? void 0 : (_action$error = action.error) === null || _action$error === void 0 ? void 0 : _action$error.message;\n    });\n  }\n});\nexport default usersSlices.reducer;","map":{"version":3,"names":["createAsyncThunk","createSlice","axios","registerUserAction","user","_ref","rejectWithValue","getState","dispatch","config","headers","data","post","error","_error$response","response","usersSlices","name","initialState","userAuth","extraReducers","builder","addCase","pending","state","action","loading","fulfilled","registered","payload","appErr","undefined","serverErr","rejected","_action$payload","_action$error","message","reducer"],"sources":["C:/Users/91962/Desktop/github2/frontend/src/redux/slices/users/usersSlices.js"],"sourcesContent":["import { createAsyncThunk, createSlice } from \"@reduxjs/toolkit\";\nimport axios from \"axios\";\n\n//register action\nexport const registerUserAction = createAsyncThunk(\n  \"users/register\",\n  async (user, { rejectWithValue, getState, dispatch }) => {\n    try {\n      //http call\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n      };\n      const { data } = await axios.post(\n        \"http://localhost:5000/api/users/register\",\n        user,\n        config\n      );\n      return data;\n    } catch (error) {\n      if (!error?.response) {\n        throw error;\n      }\n      return rejectWithValue(error?.response?.data);\n    }\n  }\n);\n\n//slices\n\nconst usersSlices = createSlice({\n  name: \"users\",\n  initialState: {\n    userAuth: \"Emma\",\n  },\n  extraReducers: builder => {\n    //register\n    builder.addCase(registerUserAction.pending, (state, action) => {\n      state.loading = true;\n    });\n    builder.addCase(registerUserAction.fulfilled, (state, action) => {\n      state.loading = false;\n      state.registered = action?.payload;\n      state.appErr = undefined;\n      state.serverErr = undefined;\n    });\n    builder.addCase(registerUserAction.rejected, (state, action) => {\n      state.loading = false;\n      state.appErr = action?.payload?.message;\n      state.serverErr = action?.error?.message;\n    });\n  },\n});\n\nexport default usersSlices.reducer;\n"],"mappings":"AAAA,SAASA,gBAAgB,EAAEC,WAAW,QAAQ,kBAAkB;AAChE,OAAOC,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,MAAMC,kBAAkB,GAAGH,gBAAgB,CAChD,gBAAgB,EAChB,OAAOI,IAAI,EAAAC,IAAA,KAA8C;EAAA,IAA5C;IAAEC,eAAe;IAAEC,QAAQ;IAAEC;EAAS,CAAC,GAAAH,IAAA;EAClD,IAAI;IACF;IACA,MAAMI,MAAM,GAAG;MACbC,OAAO,EAAE;QACP,cAAc,EAAE;MAClB;IACF,CAAC;IACD,MAAM;MAAEC;IAAK,CAAC,GAAG,MAAMT,KAAK,CAACU,IAAI,CAC/B,0CAA0C,EAC1CR,IAAI,EACJK,MAAM,CACP;IACD,OAAOE,IAAI;EACb,CAAC,CAAC,OAAOE,KAAK,EAAE;IAAA,IAAAC,eAAA;IACd,IAAI,EAACD,KAAK,aAALA,KAAK,eAALA,KAAK,CAAEE,QAAQ,GAAE;MACpB,MAAMF,KAAK;IACb;IACA,OAAOP,eAAe,CAACO,KAAK,aAALA,KAAK,wBAAAC,eAAA,GAALD,KAAK,CAAEE,QAAQ,cAAAD,eAAA,uBAAfA,eAAA,CAAiBH,IAAI,CAAC;EAC/C;AACF,CAAC,CACF;;AAED;;AAEA,MAAMK,WAAW,GAAGf,WAAW,CAAC;EAC9BgB,IAAI,EAAE,OAAO;EACbC,YAAY,EAAE;IACZC,QAAQ,EAAE;EACZ,CAAC;EACDC,aAAa,EAAEC,OAAO,IAAI;IACxB;IACAA,OAAO,CAACC,OAAO,CAACnB,kBAAkB,CAACoB,OAAO,EAAE,CAACC,KAAK,EAAEC,MAAM,KAAK;MAC7DD,KAAK,CAACE,OAAO,GAAG,IAAI;IACtB,CAAC,CAAC;IACFL,OAAO,CAACC,OAAO,CAACnB,kBAAkB,CAACwB,SAAS,EAAE,CAACH,KAAK,EAAEC,MAAM,KAAK;MAC/DD,KAAK,CAACE,OAAO,GAAG,KAAK;MACrBF,KAAK,CAACI,UAAU,GAAGH,MAAM,aAANA,MAAM,uBAANA,MAAM,CAAEI,OAAO;MAClCL,KAAK,CAACM,MAAM,GAAGC,SAAS;MACxBP,KAAK,CAACQ,SAAS,GAAGD,SAAS;IAC7B,CAAC,CAAC;IACFV,OAAO,CAACC,OAAO,CAACnB,kBAAkB,CAAC8B,QAAQ,EAAE,CAACT,KAAK,EAAEC,MAAM,KAAK;MAAA,IAAAS,eAAA,EAAAC,aAAA;MAC9DX,KAAK,CAACE,OAAO,GAAG,KAAK;MACrBF,KAAK,CAACM,MAAM,GAAGL,MAAM,aAANA,MAAM,wBAAAS,eAAA,GAANT,MAAM,CAAEI,OAAO,cAAAK,eAAA,uBAAfA,eAAA,CAAiBE,OAAO;MACvCZ,KAAK,CAACQ,SAAS,GAAGP,MAAM,aAANA,MAAM,wBAAAU,aAAA,GAANV,MAAM,CAAEZ,KAAK,cAAAsB,aAAA,uBAAbA,aAAA,CAAeC,OAAO;IAC1C,CAAC,CAAC;EACJ;AACF,CAAC,CAAC;AAEF,eAAepB,WAAW,CAACqB,OAAO"},"metadata":{},"sourceType":"module","externalDependencies":[]}